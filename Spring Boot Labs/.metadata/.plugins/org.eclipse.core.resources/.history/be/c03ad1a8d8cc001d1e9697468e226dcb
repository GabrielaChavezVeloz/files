package com.springcloudgateway;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.netflix.eureka.EnableEurekaClient;

@SpringBootApplication
@EnableEurekaClient
public class SpringcloudGatewayApplication {

	public static void main(String[] args) {

		SpringApplication.run(SpringcloudGatewayApplication.class, args);
	}

	
	@Bean
	public RouteLocator myRoutes(RouteLocatorBuilder builder) {
//		String httpUri = uriConfiguration.getHttpbin();
		
		return builder.routes()
				.route(p -> p
					.path("/products/**", 
							"/deals_of_the_day/**", 
							"/categories/**")
					.filters(f -> f
							.circuitBreaker(config -> config
									.setName("mycmd")
									.setFallbackUri("forward:/fallback")))
					.uri("lb://products-service"))
				.route(p -> p
					.path("/checkout/**")
					.and()
					.readBody(String.class, s -> true)
					.filters(f -> f
						.circuitBreaker(config -> config
							.setName("mycmd")
							.setFallbackUri("forward:/fallback")))
					.uri("lb://orders-service"))
				.build();
		
//		return builder.routes()
//			.route(p -> p
//				.path("/get")
//				.filters(f -> f.addRequestHeader("Hello", "World"))
//				.uri(httpUri))
//			.route(p -> p
//				.host("*.google.com")
//				.filters(f -> f
//					.circuitBreaker(config -> config
//						.setName("mycmd")
//						.setFallbackUri("forward:/fallback")))
//				.uri(httpUri))
//			.build();
	}
	
	//just a fallback template
	@RequestMapping("/fallback")
	  public Mono<String> fallback() {
	    return Mono.just("fallback");
	  }
}
